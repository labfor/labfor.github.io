(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{210:function(e,t,a){"use strict";a.r(t);var o=a(0),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"_1-neural-network-model-search-yoso"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-neural-network-model-search-yoso"}},[e._v("#")]),e._v(" 1. Neural network model search (YOSO)")]),e._v(" "),a("p",[e._v("We notice that different neural network models deployed on the same neural network processor exhibit distinct computing efficiency even though the overall sizes are similar. Thereby, smaller neural network models do not promise high computing efficiency on neural network accelerators. With this observation, we propose a co-designed customization framework YOSO that searches for the matched neural network models and neural network accelerator configuration at the same time. Particularly, we propose a novel single-shot AutoML strategy to ensure rapid customization with just the data. YOSO is open sourced and can be found in YOSO directory.")]),e._v(" "),a("h3",{attrs:{id:"_2-compile-obtained-neural-network-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-compile-obtained-neural-network-model"}},[e._v("#")]),e._v(" 2. Compile obtained neural network model")]),e._v(" "),a("p",[e._v("We are still working on the background web server to enable on-line compilation. It will be available soon. Currently, we mainly provide the compiled instructions for a few typical neural networks such that users can try it immediately on Zynq platforms. Table 1 presents the summary of the compiled neural networks and the used dataset. All the neural networks are quantized at 8bit. In addition, note that the models are pre-trained on the open datasets, but they are further tuned for some specific scenarios. The compiled models can be found in model-zoo.\n")]),a("div",{attrs:{align:"center"}},[a("div",{staticStyle:{display:"inline-block",color:"#999",padding:"1px"}},[e._v(" Table 1 Summary of the pre-compiled neural network models")]),a("p"),e._v(" "),a("br"),e._v(" "),a("table",{staticStyle:{display:"inline"}},[a("tr",[a("th",[e._v("Neural network models                   ")]),e._v(" "),a("th",[e._v("                 Datasets   ")])]),e._v(" "),a("tr",[a("td",[e._v("Resnet18")]),e._v(" "),a("td",[e._v("ImageNet2012")])]),e._v(" "),a("tr",[a("td",[e._v("Yolo v2")]),e._v(" "),a("td",[e._v("Pascal  VOC")])]),e._v(" "),a("tr",[a("td",[e._v("DCGAN")]),e._v(" "),a("td",[e._v("COCO2014")])])])]),e._v(" "),a("h3",{attrs:{id:"_3-add-npu-to-pl-of-zynq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-add-npu-to-pl-of-zynq"}},[e._v("#")]),e._v(" 3. Add NPU to PL of Zynq")]),e._v(" "),a("h3",{attrs:{id:"_4-boot-mz7100-fpga-board"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-boot-mz7100-fpga-board"}},[e._v("#")]),e._v(" 4. Boot MZ7100 FPGA board")]),e._v(" "),a("p",[e._v("4.1 To boot the board on MZ7100, you need to setup MZ7100 properly and detailed tutorial can be found in xxx. "),a("br"),e._v("\n4.2 We will boot from SD card and you need to put the rootfile system (boot/rootfs) and the kernel image (boot/kernel) in SD card. NPU driver is located in .")]),e._v(" "),a("h3",{attrs:{id:"_5-login-and-run-the-application"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-login-and-run-the-application"}},[e._v("#")]),e._v(" 5. Login and run the application")]),e._v(" "),a("h3",{attrs:{id:"reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[e._v("#")]),e._v(" Reference")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"./doc/NPU.pdf"}},[e._v("NPU manual")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);